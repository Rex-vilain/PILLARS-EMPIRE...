# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cfFz-S65U2xqIcxruvfWIlVwp0ukOxY7
"""


import pandas as pd
from datetime import datetime


new_entry = {
    "Date": datetime.now().strftime("%Y-%m-%d"),
    "Sales": 4100,
    "Accommodation": 1200,
    "Chama": 300,
    "Expenses": 800,
    "Boss Cash": 1000,
    "Balance": 3600
}


df_new = pd.DataFrame([new_entry])


csv_file = "records.csv"

try:
    df_existing = pd.read_csv(csv_file)
    df_all = pd.concat([df_existing, df_new], ignore_index=True)
except FileNotFoundError:
    df_all = df_new


df_all.to_csv(csv_file, index=False)

print("✅ Entry saved to records.csv")

import streamlit as st
import pandas as pd
import os

st.set_page_config(layout="wide")
st.title("Pillars Bar & Restaurant Stock Sheet")


items = [
    "TUSKER", "PILISNER", "TUSKER MALT", "TUSKER LITE", "GUINESS KUBWA", "GUINESS SMALL", "BALOZI CAN", "WHITE CAP",
    "BALOZI", "SMIRNOFF ICE", "SAVANNAH", "SNAPP", "TUSKER CIDER", "KING FISHER", "ALLSOPPS", "G.K CAN", "T.LITE CAN",
    "GUARANA", "REDBULL", "RICHOT ¾", "RICHOT ¼", "VICEROY ¼", "VICEROY 1/4", "VODKA ¼", "VODKA 1/4", "KENYA CANE ¾",
    "KENYA CANE ¼", "KENYA CANE 1/4", "GILBEYS ½", "GILBEYS 1/4", "V&A 750 ML", "CHROME", "TRIPLE ACE", "BLACKS & WHITE",
    "KIBAO ½", "KIBAO 1/4", "HUNTERS ¼", "HUNTERS 1/4", "CAPTAIN MORGAN", "KONYAGI", "V & A", "COUNTY", "BEST 750 ML",
    "WATER 1 L", "WATER ½", "LEMONADE", "CAPRICE", "FAXE", "C. MORGAN", "VAT 69", "SODA 300 ML", "SODA 600 ML",
    "BLACK & WHITE", "BEST", "CHROME 750 ML", "MANGO", "TRUST", "PUNCH", "VODKA 750 ML", "KONYAGI 500 ML", "GILBEYS 750 ML"
]


CSV_FILE = "stock_data.csv"


def load_data():
    if os.path.exists(CSV_FILE):
        return pd.read_csv(CSV_FILE)
    else:
        # Create initial DataFrame if no file
        df = pd.DataFrame({
            "Item": items,
            "Opening Stock": 0,
            "Purchase": 0,
            "Closing Stock": 0,
            "Sales": 0,
            "Selling Price": 0.0,
        })
        df["Amount"] = df["Sales"] * df["Selling Price"]
        return df


df = load_data()


edited = st.data_editor(df, use_container_width=True, num_rows="dynamic")


total_sales = (edited["Sales"] * edited["Selling Price"]).sum()
accommodation = st.number_input("Accommodation (Ksh)", 0)
chama = st.number_input("Chama (Ksh)", 0)
expenses = st.number_input("Expenses (Ksh)", 0)
to_boss = st.number_input("Cash to Boss (Ksh)", 0)
total_income = total_sales + accommodation + chama
profit = total_income - (expenses + to_boss)


col1, col2 = st.columns(2)
with col1:
    st.metric("Total Sales", f"Ksh {total_sales:,.2f}")
    st.metric("Accommodation", f"Ksh {accommodation:,.2f}")
    st.metric("Chama", f"Ksh {chama:,.2f}")
with col2:
    st.metric("Expenses", f"Ksh {expenses:,.2f}")
    st.metric("To Boss", f"Ksh {to_boss:,.2f}")
    st.metric("Profit", f"Ksh {profit:,.2f}")


if st.button("Save Data"):
    edited["Amount"] = edited["Sales"] * edited["Selling Price"]
    edited.to_csv(CSV_FILE, index=False)
    st.success(f"Data saved to {CSV_FILE}!")


st.download_button(
    label="Download CSV",
    data=edited.to_csv(index=False),
    file_name="daily_stock_data.csv",
    mime="text/csv"
)

!pip install streamlit
